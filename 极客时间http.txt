可以先学web第1部分，再学nginx第1-3部分，再回过头把web其余学完，再去nginx其他部分学完

ABNF操作符
值范围语法%c##-##：
  例如：OCTAL = "0" / "1" / "2" / "3" / "4" / "5" / "6" / "7" 与 %x30-%x37 等价
序列组合 ()：将规则组合起来，视为单个元素
不定量重复m*n：
  例如：
    * 表示0个或多个元素，例如：*(header-field CRLF)
    1* 表示1个或多个元素，例如：2*4表示2-4个元素
可选序列[]：
  例如：[message-body]


为什么要对URI进行编码？
1、get参数中可能包含?#等hash、query的分隔符
2、中文、空格、引号、尖括号等写到URI之后可能会有代理服务器、服务器会认为这是有问题的
只要不在ASCII可视码之外的都需要编码

URI的保留字符
非保留字符

短连接：客户端和服务器建立一个连接，服务器只执行一个事务
长连接：客户端和服务器建立一个连接，客户端可以不断向服务器请求，服务器会执行多个事务，即客户端可以复用这个tcp连接

客户端请求头中如果带有Connection: Keep-Alive就代表客户端希望使用长连接
如果服务器也支持长连接，就会在响应头中加上Connection: Keep-Alive
HTTP1.1默认支持长连接，所以Connection: Keep-Alive这个头意义不大
如果明确表示不支持长连接，可以将Connection头设置为Close
Connection除了上述的作用之外，还有一个作用，这个作用和代理服务器相关，Connection用于告诉代理服务器，不要转发Connection列出的头部

客户端如何知道发Connection头还是Proxy-Connection头？

同源策略：限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互，在可用性和安全性下寻找一个平衡点
可用性：
script、img、link、iframe、video、audio是允许跨域的
表单提交、可以提交到另外一个站点
安全性：
浏览器要防止站点A的脚本向站点B发起危险动作，因此A站点无法读取B站点的cookie

CSRF防攻击方式：
1、服务器通过Referer头来判断请求是不是来自自己的站点
2、服务器给客户端一个临时的token，攻击者无法伪造这个token时可以防攻击