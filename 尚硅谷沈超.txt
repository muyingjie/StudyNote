/bin /usr/bin 所有用户都可以执行 /bin是/usr/bin的软连接
/sbin /usr/sbin 只有root用户可以执行
/lib /lib64是系统调用函数库目录 /usr/lib是 /lib的软连接 里面都以.so 版本号结尾
/usr/local 源码安装的软件位置
/usr/share 应用程序的资源文件保存位置
重要：/usr/src 源码包保存位置 不过习惯放在/usr/local/src下
/usr/src/kernels 内核源码保存位置

数据库默认保存在/var/lib/mysql下
/var/spool/mail 新收到的邮件队列保存位置
/var/spool/cron 系统的定时任务队列保存为止

分区表和操作系统无关，无论Windows还是Linux，都是建立在MBR分区表或GPT分区表的

只有MBR分区表才存在扩展分区、逻辑分区的概念，GPT分区表最大可支持128个分区，无需这些东西

每块硬盘最多有一个扩展分区

格式化操作的对象是分区
格式化的目的是为了写入文件系统，而不是为了清空分区，不同的文件系统之间对单个文件大小、分区大小、io速度的要求不同

每个分区中存储的每个文件都有各自的索引信息，每条索引又叫iNode，大小为128字节，索引包括iNode号、修改时间、创建时间、访问权限、从哪个block块开始保存

swap分区是给内核用的，普通用户无法访问，因此swap前没有/，即/swap是不对的，swap和/不是包含关系，swap分区和/根分区是处于并列地位的


给bcd文件的所有者添加执行权限
chmod u+x bcd

文件颜色是绿色不能代表该文件就可以执行，还要看当前用户是否有执行该文件的权限

给所属组，其他人添加写权限
chmod g+w,o+w bcd

减去权限
chmod u-x,g-w,o-w bcd

普通用户不能修改文件的所有者，即使属于他的文件也不可以修改，只有root用户才可以

对一个文件拥有写权限，并不代表可以删除这个文件
因为这个文件的索引信息中只有iNode号、修改时间、创建时间、访问权限、从哪个block块开始保存这些信息，而没有存储文件名，文件名是放在父级目录block中的，父级目录的block就是存里面的文件或文件夹的文件名、iNode的，形式为文件名-iNode号映射存储，因此想要删除一个文件，必须对它的父级有写权限

以此类推，根目录也有自己的iNode，也有block块，它的block块中也存着子目录的iNode-文件或目录名的映射，那根目录的iNode-文件名映射在哪存呢？答案是根目录的iNode是固定的，永远都是2

Linux中的6种权限：基本权限（rwx）、umask默认权限

Linux中只有两种包：源码包和二进制包
centos中二进制包有两种安装方式——手工安装（通过rpm命令）、yum安装
yum只是一种安装方式，解决了RPM安装过程中的包依赖问题

service httpd start 启动时默认寻找/etc/in.d/init.d/httpd 或/etc/init.d/httpd，/etc/init.d/httpd实际上是/etc/in.d/init.d/httpd的软连接

服务器静态文件存放目录：/var/www/html/

配置文件目录：/etc/httpd/conf/httpd.conf

导入数字证书很重要 视频第59节，文档在“软件包管理”一章中

用户及权限管理===========================
/etc/passwd 用户文件，每行代表一个用户
root:x:0:0:root:/root:/bin/bash

passwd中只有表示密码的标志，真正的密码在/etc/shadow中，/etc/shadow的权限是000

理论上，所有服务都需要有自己的伪用户，例如Apache装完后，在它的配置文件中，会有User和Group两个配置，这两个配置就是Apache这个用户的用户名和所属组

用户组分为初始组和附加组
每添加一个用户，都会同时添加一个和用户名同名的初始组

Linux判断用户权限是通过用户的uid来判断的，如果把普通用户的uid改为0，则该用户就会拥有root权限，也就是说我们可以修改
user1:x:500:500::/home/user1:/bin/bash
中的第3列为0，则该用户的操作就和root一样了

每添加一个用户（例如u1），系统会在该用户的家目录（/home/u1）下，将/etc/skel中的内容拷贝一份过去，因此/etc/skel被称为用户的模板目录

正常情况下每添加一个用户（useradd），就需要给用户设置密码，否则用户无法登陆
但安装服务（例如MySQL）时生成的用户通常不添加密码，因为我们不需要让这个用户登陆

分配权限时，首先要搞明白要赋予权限的所有者、所属组是谁
例如某公司给员工分配权限，所有人将日报提交至/www/这一目录下
假设/www/的所有者属于某一领导a，有u1、u2、u3...u50，50位员工
每位员工应该给770权限，这样就可以在这个目录中新建、修改、删除文件了
但问题是u1也可以修改u2、删除u2的文件了，我们之后会有其他权限机制阻止这种操作

shell
echo打印时，如果想要输出!，后面必须加空格
echo "1111! "

在.bashrc中可以定义别名
执行source .bashrc命令，不需要重启，可以直接生效

dizhi566@gmail.com

批量解压，写法1
#!/bin/bash

cd /root/sh/tar

ls *.tar.gz tar.log
# 多种扩展名的压缩文件，需要用>>追加写入tar.log中，而不能用>，>是会覆盖整个文件的
# &>/dev/null 可以去掉所有打印信息
ls *.tgz >> tar.log &>/dev/null
# 统计有多少行，并写入aa变量中
aa=$(cat tar.log|wc -l)

for (( i=1;i<"$aa";i=i+1 ))
do
  bb=$(cat tar.log | awk 'NR==='$i' {print $1}')
  tar -zxvf $bb -C /root/sh/tar
done


批量解压，写法2
#!/bin/bash

ls *.tar.gz > tar.log

# cat既可以识别空格隔开、也可以识别换行隔开
for i in $(cat tar.log)
do
  tar -zxvf $i
done

rm -rf tar.log

Windows的服务管理中有自动、手动、禁用状态，手动状态是当系统需要的时候不会询问管理员是否同意，而自动开启的意思，并不是需要用户手动开启的意思

ps aux 执行之后得到的结果中，tty一列很多都显示?，这些都是系统进程

防火墙可以过滤的有IP MAC地址 端口号 协议类型 数据包中的数据

25-28要看

ssh（Secure Shell）——应用层安全远程管理协议
ssh登录的两种验证方式：
1、账户密码验证：
客户端发送账户、密码到服务端，服务端通过查询/etc/passwd和etc/shadow来校验
2、密钥对验证
ssh客户端的3个秘钥：
客户端自己的公钥
客户端自己的私钥
服务器端的公钥

服务端的3个秘钥：
服务端自己的公钥
服务端自己的私钥
客户端的公钥

客户端开始时没有服务端的公钥，而服务端在创建的时候已经通过某种方式加入了客户端的公钥
客户端通过ssh连接服务端时，会将自己的公钥发送给服务端，服务端验证通过后登陆成功，并且将自己的公钥给客户端

VMware在安装时会在Windows宿主机上装一个虚拟网卡，这个虚拟网卡用来和虚拟机中的系统（例如Linux）进行通信

虚拟机在NAT模式下，会给虚拟机的宿主机（装了虚拟机的机器）建一个虚拟网卡作为网关，该网关地址通常会占用子网中的第1个ip，而虚拟机中所有的机器也需要一个网关和宿主机进行通信，因此也需要一块网卡，一个地址，这个地址通常占用子网中的第2个ip

service network restart会重启所有网卡，每个服务器上至少有两块网卡，因此可能会造成服务的不稳定，推荐使用
ifdown eth0:ifup eth0



nginx 默认的配置文件在安装目录的conf下面的nginx.conf

防火墙命令 firewall-cmd

域名->IP的解析过程：查hosts -> 查DNS缓存 -> 查DNS服务器

创建不能登录操作系统、但有家目录的用户：useradd -s /sbin/nologin，ftp客户端通常属于这类用户

秘钥：.key 相当于私钥
证书：.csr 相当于公钥
签字后的证书：.crt 由证书转化而来，相比于证书，有一定的有效期、加密类型、加密长度

生产环境下，CA证书要去专门的http证书厂商注册购买，填写网站、公司信息才可以得到证书，浏览器会拿着这个证书校验，证书有效才会进行数据传输，最终买到的就是上面的秘钥和签字后的证书

约束既可以针对行，也可以针对列
MySQL的唯一约束指的是列或列的组合不能重复
主键约束是唯一约束和非空约束的组合
索引是某个表中一个或若干字段的组合，表的存储由两部分组成，一部分用来存放数据，另一部分用来存放索引页面

索引工作原理：数据检索花费的大部分开销是磁盘IO，没有索引就需要去磁盘上读表的每个数据页，如果有索引则只需要查找索引页面就可以了

存储引擎是存储数据、建立索引、更新查询数据的实现方式，存储引擎是基于表的，而不是基于库的，所以存储引擎也可以被称为表类型，Oracle、SqlServer有多种存储引擎，MySQL有多种存储引擎，提供了插件式的存储引擎架构，甚至可以自己编写存储引擎
MySQL的存储引擎：
MYISAM
INNODB
MEMORY
只有INNODB引擎支持事务

数据库系统是建立在文件系统之上的：
数据库系统可以分以下几层：
表示层：数据库-数据库表-记录、字段
逻辑层：数据库的存储引擎
物理层：数据库文件

文件系统分层：
表示层：文件名（文件类型）
逻辑层：文件系统类型（EXT4 NTFS XFS）
物理层：分区块（数据块）-> 扇区


集群
负载均衡LBC集群：分担服务的总体压力 每个子节点的工作是一致的
高可用集群HAC：尽可能保障服务状态的可用性
高性能运算集群HPC：提供单台服务器提供不了的计算能力 每个子节点参与工作的一部分
LBC可以增加访问量，HPC用于提升处理效率

f5是硬件实现负载均衡
数据链路层负载均衡：f5
传输层负载均衡：lvs
应用层负载均衡：NGINX

lvs适用于cs、bs两种模式下的负载均衡
nginx只适用于bs模式下的负载均衡

LVS工作模式分类：
NAT
TUN
DR：负载均衡服务器和应用服务器处在一个广播域中


ESXI是VMWare公司的一款软件











问题：
假如执行了 rm -rf /，swap分区是否会被删除？
对于Linux来说，为什么不把/boot目录、/home目录也放到根目录下，为什么根目录、/boot目录、/home目录有在硬盘中有各自的分区？
客户机没能从DHCP服务器中得到IP时，会生成一个169.254.0.0网段的一个B类的虚拟IP，这个IP有什么用？
如果客户端配置了DNS服务器地址为8.8.8.8，那会不会去本地DNS服务器解析域名？